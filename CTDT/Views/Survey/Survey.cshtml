﻿﻿@model Newtonsoft.Json.Linq.JObject
@{
    ViewBag.Title = "Khảo sát | TDMU 2023 - 2024";
    Layout = null;
}

<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="https://kit.fontawesome.com/64d58efce2.js" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.3.0/css/all.min.css" integrity="sha512-SzlrxWUlpfuzQ+pcUCosxcglQRNAq/DZjVsC0lE40xsADsfeQoEypE+enwcOiGjk/bSuGGKHEyjSoQ1zVisanQ==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous" />
    <link rel="stylesheet" href="https://unicons.iconscout.com/release/v4.0.0/css/line.css" />
    <link rel="icon" type="image/x-icon" href="https://tdmu.edu.vn/hinh/Icon.png" />
    <title>@ViewBag.Title</title>
    <link href="~/Style/user/css/loading.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/Style/user/css/sweetalert2.min.css">
    <link rel="stylesheet" href="~/Style/user/css/surveyStyle3.css" />
    <link rel="stylesheet" href="~/Style/user/css/loading.css" />
</head>

<body>
    <style>
        #spinner-div {
            position: fixed;
            display: none;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            text-align: center;
            background-color: rgba(255, 255, 255, 0.8);
            z-index: 2;
        }
    </style>

    <div id="spinner-div" class="pt-5">
        <div class="spinner-border text-primary" role="status"></div>
    </div>

    <div id="form">
        <!-- HEADER SURVEY FORM -->
        <div class="banner">
            <div class="form-banner d-none d-lg-flex row p-4 container-fluid" style="background-image: url('https://dbcl.tdmu.edu.vn/img/ckeditor/Images/af169f03-90b1-46d1-a7b4-99a9cc7ee909.png'); background-position: center; background-size: contain; background-repeat: no-repeat;"></div>
        </div>

        <div class="header-title-section">
            <div class="lineUp">
                <h1 class="survey-title">@Model["title"]</h1>
                <h3 class="survey-title2" id="sur-title"></h3>
                <p class="survey-p">@Model["description"]</p>
            </div>
        </div>
        @foreach (var pages in Model["pages"])
        {
            var visible = pages["visible"] != null ? (bool)pages["visible"] : true;
            var visibleStyle = visible ? "" : "display:none;";

            <div class="item-ques" name="pages_@(pages["name"])" style="background-color: #D9ECF1; @(visibleStyle)">
                <label class="ques-header" for="join" style="margin-bottom: 0;">
                    <strong>@pages["title"]</strong>
                </label>
                @if (pages["description"] != null)
                {
                    <br />
                    <label class="ques-text" for="usedLib" style="font-weight: 400">@pages["description"]</label>
                }
            </div>

            foreach (var questions in pages["elements"])
            {
                var isRequired = questions["isRequired"] != null ? (bool)questions["isRequired"] : false;
                var requiredClass = isRequired ? "required-ques" : "";
                var requiredText = isRequired ? "(Bắt buộc)" : "(Không bắt buộc)";
                var visibleIf = questions["visibleIf"] != null ? string.Join(",", questions["visibleIf"].Select(v => v.ToString()).ToArray()) : "";
                var visibleQuestion = questions["visible"] != null ? (bool)questions["visible"] : true;
                var visibleQuestionStyle = visibleQuestion ? "" : "display:none; margin-bottom: 15px; margin-top: 15px;";
                <div class="item-ques" name="questions_@(questions["name"])" style="@(visibleQuestionStyle)" data-visibleif="@visibleIf">
                    <label class="ques-text @(requiredClass) clear-margin" for="major">
                        <strong>@questions["title"]</strong> @requiredText
                    </label>

                    @switch ((string)questions["type"])
                    {
                        case "phonenumber":
                        case "number":
                            <input type="number" class="inputVal2" name="@questions["name"]" placeholder="Nhập thông tin @(questions["title"]) tại đây..." min="1" max="99999999999999" />
                            break;
                        case "text":
                            <input type="text" class="inputVal2" name="@questions["name"]" placeholder="Nhập thông tin @(questions["title"]) tại đây..." />
                            break;
                        case "email":
                            <input type="email" class="inputVal2" name="@questions["name"]" placeholder="Nhập thông tin @(questions["title"]) tại đây..." />
                            break;
                        case "comment":
                            <textarea required="" name="@questions["name"]" rows="10" spellcheck="false" placeholder="Nhập thông tin @(questions["title"])"></textarea>
                            break;
                        case "radiogroup":
                            foreach (var choices in questions["choices"])
                            {
                                <label class="ques-choice">
                                    <input class="info" type="radio" name="@questions["name"]" value="@choices["name"]" />
                                    @choices["text"]
                                </label>
                            }
                            if (questions["showOtherItem"] != null && (bool)questions["showOtherItem"])
                            {
                                <label class="ques-choice">
                                    <input class="info" type="radio" name="@questions["name"]" value="@questions["name"]_other" />
                                    @questions["otherText"]
                                </label>
                                <input type="text" class="inputVal" name="@questions["name"]_other" placeholder="Vui lòng điền rõ thông tin của anh/chị..." />
                            }
                            break;
                        case "checkbox":
                            foreach (var choices in questions["choices"])
                            {
                                <label class="ques-choice">
                                    <input class="info" type="checkbox" name="@questions["name"]" value="@choices["name"]" />
                                    @choices["text"]
                                </label>
                            }
                            if (questions["showOtherItem"] != null && (bool)questions["showOtherItem"])
                            {
                                <label class="ques-choice">
                                    <input class="info" type="checkbox" name="@questions["name"]" value="@questions["name"]_other" />
                                    @questions["otherText"]
                                </label>
                                <input type="text" class="inputVal" name="@questions["name"]_other" placeholder="Vui lòng điền rõ thông tin của anh/chị..." />
                            }
                            break;
                        default:
                            break;
                    }
                    <p style="color: red;display: none;" id="alert_@(questions["name"])" name="tag_p_error"></p>
                </div>
            }
        }

        <div class="actionDiv">
            <span class="needHelp" title="Gửi Email hỗ trợ tới: #">
                <i class="fa-solid fa-triangle-exclamation" aria-hidden="true"></i><a class="needHelpText" href="#"> Báo cáo hỗ trợ.</a>
            </span>
            <input type="button" id="submit_phieu" data-loading-text="Đang xử lý...." value="Gửi" class="btn solid open">
        </div>
    </div>

    <div class="modal fade" id="exampleModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-body">
                    <div class="loading-spinner">
                        <div class="loading-spinner-inner">
                            <div class="loading-spinner-circle"></div>
                            <div class="loading-spinner-circle"></div>
                            <div class="loading-spinner-circle"></div>
                            <div class="loading-spinner-circle"></div>
                            <div class="loading-spinner-circle"></div>
                        </div>
                    </div>
                    <p class="text-center">Hệ thống đang ghi nhận thông tin của bạn, vui lòng chờ giây lát...</p>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade"
         id="err-modal"
         tabindex="-1"
         aria-labelledby="exampleModalLabel"
         aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Lỗi</h1>
                    <button type="button"
                            class="btn-close"
                            data-bs-dismiss="modal"
                            aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <h4>Gửi dữ liệu không thành công</h4>
                    <p>
                        Vui lòng gửi lại hoặc chụp màn hình lỗi gửi tới email
                        <a href="#">#</a>
                    <p id="mess-err"></p>


                </div>
            </div>
        </div>
    </div>
    <p class="p_copyright" style="text-align: center">
        Copyright &copy <span id="copyright_year"></span>
        <a href="#"
           style="font-style: italic; text-decoration: none; color: #0139a6">ĐẢM BẢO CHẤT LƯỢNG - TDMU</a>
    </p>
    <script src="https://code.jquery.com/jquery-3.6.1.min.js"
            integrity="sha256-o88AwQnZB+VDvE9tvIXrMQaPlFFSUTR+nldQm1LuPXQ="
            crossorigin="anonymous"></script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/js/bootstrap.min.js"
            integrity="sha384-7VPbUDkoPSGFnVtYi0QogXtr74QeVeeIs99Qfg5YCF+TidwNdjvaKZX19NZ/e6oz"
            crossorigin="anonymous"></script>
    <script src="~/Style/user/css/sweetalert2.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>

    <script src="https://code.jquery.com/jquery-3.6.1.min.js"
            integrity="sha256-o88AwQnZB+VDvE9tvIXrMQaPlFFSUTR+nldQm1LuPXQ="
            crossorigin="anonymous"></script>

    <script>
$(document).ready(function () {
    $('#submit_phieu').click(function () {
        saveFormData();
        checkVisibility();
    });

    $('.inputVal2, input[type="text"], input[type="number"], input[type="email"], textarea').blur(function () {
        if ($(this).hasClass('required-ques') && $(this).val().trim() === '') {
            $(this).closest('.item-ques').find('[id^="alert_"]').text("Trường này là bắt buộc.").show();
        } else {
            $(this).closest('.item-ques').find('[id^="alert_"]').hide();
        }
    });
});

var timeout;
function startTimer() {
    timeout = setTimeout(function () {
        Swal.fire({
            title: "Quá thời gian thực hiện khảo sát!",
            text: "Bạn sẽ được chuyển hướng về trang chủ.",
            icon: "warning",
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Đồng ý"
        }).then((result) => {
            if (result.isConfirmed) {
                fetch('@Url.Action("ClearSession", "Home")', { method: 'POST' })
                .then(() => {
                    window.location.href = '@Url.Action("Index", "Home")';
                })
                .catch(() => {
                    window.location.href = '@Url.Action("Index", "Home")';
                });
            }
        });
    }, 3000000);
}

function resetTimer() {
    clearTimeout(timeout);
    startTimer();
}

document.addEventListener('DOMContentLoaded', (event) => {
    startTimer();
});

document.addEventListener('mousemove', resetTimer);
document.addEventListener('keypress', resetTimer);
document.addEventListener('click', resetTimer);

function saveFormData() {
    var formData = {
        pages: []
    };
    var valid = true;

    $('.item-ques[name^="pages_"]').each(function () {
        var pageName = $(this).attr('name');
        var pageTitle = $(this).find('.ques-header strong').text().trim();

        var pageData = {
            name: pageName.replace(/pages_/g, ''),
            title: pageTitle,
            elements: []
        };

        $(this).nextUntil('.item-ques[name^="pages_"]').each(function () {
            var questionName = $(this).attr('name');
            if (!questionName) return;

            var questionType = $(this).find('input[type="radio"]').length > 0 ? 'radiogroup' : $(this).find('input[type="checkbox"]').length > 0 ? 'checkbox' : $(this).find('textarea').length > 0 ? 'comment' : 'text';

            var questionShortName = questionName.replace(/questions_/g, '');
            var questionTitle = $(this).find('.ques-text strong').text().trim();

            var questionData = {
                type: questionType,
                name: questionShortName,
                title: questionTitle,
                response: {}
            };

            var isVisible = $(this).is(':visible');
            var isRequired = isVisible && $(this).find('.required-ques').length > 0;
            var alertElement = $(this).find('[id^="alert_"]');

            switch (questionType) {
                case 'radiogroup':
                    var selectedRadio = $(this).find('input[type="radio"]:checked');
                    var selectedValue = selectedRadio.val();
                    var otherInput = $(this).find('input[type="text"]').val();
                    var selectedText = selectedRadio.closest('label').text().trim();
                    if (isRequired && !selectedValue) {
                        valid = false;
                        alertElement.text("Trường " + questionTitle + " là bắt buộc.").show();
                    } else {
                        alertElement.hide();
                    }
                    questionData.response = {
                        "name": selectedValue,
                        "text": selectedText,
                        "other": otherInput ? otherInput : null
                    };
                    break;

                case 'checkbox':
                    var checkedValues = [];
                    var checkedTexts = [];
                    $(this).find('input[type="checkbox"]:checked').each(function () {
                        checkedValues.push($(this).val());
                        checkedTexts.push($(this).closest('label').text().trim());
                    });
                    var otherInput = $(this).find('input[type="text"]').val();
                    if (isRequired && checkedValues.length === 0) {
                        valid = false;
                        alertElement.text(questionTitle + " là bắt buộc.").show();
                    } else {
                        alertElement.hide();
                    }
                    questionData.response = {
                        "name": checkedValues,
                        "text": checkedTexts,
                        "other": otherInput ? otherInput : null
                    };
                    break;

                case 'comment':
                    var inputValue = $(this).find('textarea').val();
                    if (isRequired && !inputValue) {
                        valid = false;
                        alertElement.text(questionTitle + " là bắt buộc.").show();
                    } else {
                        alertElement.hide();
                    }
                    questionData.response = {
                        "text": inputValue
                    };
                    break;

                default:
                    var inputValue = $(this).find('input[type="text"], input[type="number"], input[type="email"]').val();
                    if (isRequired && !inputValue) {
                        valid = false;
                        alertElement.text(questionTitle + " là bắt buộc.").show();
                    } else {
                        alertElement.hide();
                    }
                    questionData.response = {
                        "text": inputValue
                    };
                    break;
            }

            pageData.elements.push(questionData);
        });

        formData.pages.push(pageData);
    });

    if (valid) {
        if (!$(this).data('saved')) {
            $.ajax({
                url: '/Survey/AddAnswer',
                type: 'POST',
                dataType: 'JSON',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({
                    surveyID: @Session["IDPhieu"],
                    json_answer: JSON.stringify(formData),
                }),
                success: function (response) {
                    Swal.fire({
                        icon: 'success',
                        title: response.status,
                        showConfirmButton: false,
                        timer: 2000
                    }).then(() => {
                        window.location.href = '@Url.Action("Index", "Home")';
                    });
                },
                error: function (response) {
                    alert(response.status);
                },
            });
            $(this).data('saved', true);
        }
    } else {
        Swal.fire({
            icon: 'error',
            title: 'Vui lòng hoàn thành tất cả các trường bắt buộc',
            showConfirmButton: true
        });
    }
}

function checkVisibility() {
    $('.item-ques').each(function () {
        var visibleIf = $(this).data('visibleif');
        var isRequiredField = $(this).find('.inputVal2, input[type="text"], input[type="number"], input[type="email"], textarea').hasClass('required-ques');

        if (visibleIf) {
            var isVisible = false;
            var conditions = visibleIf.split(',');
            for (var i = 0; i < conditions.length; i++) {
                var condition = conditions[i].trim();
                if ($('input[name=' + condition.split('_')[0] + ']:checked').val() === condition) {
                    isVisible = true;
                    break;
                }
            }
            if (isVisible) {
                $(this).show();
                if (isRequiredField) {
                    $(this).find('.inputVal2, input[type="text"], input[type="number"], input[type="email"], textarea').addClass('required-ques');
                }
            } else {
                $(this).hide();
                if (isRequiredField) {
                    $(this).find('.inputVal2, input[type="text"], input[type="number"], input[type="email"], textarea').removeClass('required-ques');
                }
            }
        } else {
            $(this).show();
        }
    });
}

$('input[type=radio], input[type=checkbox]').change(checkVisibility);
    </script>

</body>
</html>